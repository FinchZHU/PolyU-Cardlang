/* This file was generated by SableCC (http://www.sablecc.org/). */

package cardlang.parser;

import cardlang.node.*;
import cardlang.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTKwgame(@SuppressWarnings("unused") TKwgame node)
    {
        this.index = 0;
    }

    @Override
    public void caseTKwscreen(@SuppressWarnings("unused") TKwscreen node)
    {
        this.index = 1;
    }

    @Override
    public void caseTKwvalid(@SuppressWarnings("unused") TKwvalid node)
    {
        this.index = 2;
    }

    @Override
    public void caseTKwnextid(@SuppressWarnings("unused") TKwnextid node)
    {
        this.index = 3;
    }

    @Override
    public void caseTKwwinnerid(@SuppressWarnings("unused") TKwwinnerid node)
    {
        this.index = 4;
    }

    @Override
    public void caseTKwshuffle(@SuppressWarnings("unused") TKwshuffle node)
    {
        this.index = 5;
    }

    @Override
    public void caseTKwfor(@SuppressWarnings("unused") TKwfor node)
    {
        this.index = 6;
    }

    @Override
    public void caseTKwfrom(@SuppressWarnings("unused") TKwfrom node)
    {
        this.index = 7;
    }

    @Override
    public void caseTKwto(@SuppressWarnings("unused") TKwto node)
    {
        this.index = 8;
    }

    @Override
    public void caseTKwwhile(@SuppressWarnings("unused") TKwwhile node)
    {
        this.index = 9;
    }

    @Override
    public void caseTKwbreak(@SuppressWarnings("unused") TKwbreak node)
    {
        this.index = 10;
    }

    @Override
    public void caseTKwcontinue(@SuppressWarnings("unused") TKwcontinue node)
    {
        this.index = 11;
    }

    @Override
    public void caseTKwif(@SuppressWarnings("unused") TKwif node)
    {
        this.index = 12;
    }

    @Override
    public void caseTKwthen(@SuppressWarnings("unused") TKwthen node)
    {
        this.index = 13;
    }

    @Override
    public void caseTKwelse(@SuppressWarnings("unused") TKwelse node)
    {
        this.index = 14;
    }

    @Override
    public void caseTKwtrue(@SuppressWarnings("unused") TKwtrue node)
    {
        this.index = 15;
    }

    @Override
    public void caseTKwfalse(@SuppressWarnings("unused") TKwfalse node)
    {
        this.index = 16;
    }

    @Override
    public void caseTKwnot(@SuppressWarnings("unused") TKwnot node)
    {
        this.index = 17;
    }

    @Override
    public void caseTKwand(@SuppressWarnings("unused") TKwand node)
    {
        this.index = 18;
    }

    @Override
    public void caseTKwor(@SuppressWarnings("unused") TKwor node)
    {
        this.index = 19;
    }

    @Override
    public void caseTLeftbrace(@SuppressWarnings("unused") TLeftbrace node)
    {
        this.index = 20;
    }

    @Override
    public void caseTRightbrace(@SuppressWarnings("unused") TRightbrace node)
    {
        this.index = 21;
    }

    @Override
    public void caseTLeftparen(@SuppressWarnings("unused") TLeftparen node)
    {
        this.index = 22;
    }

    @Override
    public void caseTRightparen(@SuppressWarnings("unused") TRightparen node)
    {
        this.index = 23;
    }

    @Override
    public void caseTPoint(@SuppressWarnings("unused") TPoint node)
    {
        this.index = 24;
    }

    @Override
    public void caseTLeftsqr(@SuppressWarnings("unused") TLeftsqr node)
    {
        this.index = 25;
    }

    @Override
    public void caseTRightsqr(@SuppressWarnings("unused") TRightsqr node)
    {
        this.index = 26;
    }

    @Override
    public void caseTLine(@SuppressWarnings("unused") TLine node)
    {
        this.index = 27;
    }

    @Override
    public void caseTOptshift(@SuppressWarnings("unused") TOptshift node)
    {
        this.index = 28;
    }

    @Override
    public void caseTOptlargerequal(@SuppressWarnings("unused") TOptlargerequal node)
    {
        this.index = 29;
    }

    @Override
    public void caseTOptlessequal(@SuppressWarnings("unused") TOptlessequal node)
    {
        this.index = 30;
    }

    @Override
    public void caseTOptinequal(@SuppressWarnings("unused") TOptinequal node)
    {
        this.index = 31;
    }

    @Override
    public void caseTOptlarger(@SuppressWarnings("unused") TOptlarger node)
    {
        this.index = 32;
    }

    @Override
    public void caseTOptless(@SuppressWarnings("unused") TOptless node)
    {
        this.index = 33;
    }

    @Override
    public void caseTOptequal(@SuppressWarnings("unused") TOptequal node)
    {
        this.index = 34;
    }

    @Override
    public void caseTOptplus(@SuppressWarnings("unused") TOptplus node)
    {
        this.index = 35;
    }

    @Override
    public void caseTOptminus(@SuppressWarnings("unused") TOptminus node)
    {
        this.index = 36;
    }

    @Override
    public void caseTOptmulti(@SuppressWarnings("unused") TOptmulti node)
    {
        this.index = 37;
    }

    @Override
    public void caseTOptdiv(@SuppressWarnings("unused") TOptdiv node)
    {
        this.index = 38;
    }

    @Override
    public void caseTOptmod(@SuppressWarnings("unused") TOptmod node)
    {
        this.index = 39;
    }

    @Override
    public void caseTLiteral(@SuppressWarnings("unused") TLiteral node)
    {
        this.index = 40;
    }

    @Override
    public void caseTNumeral(@SuppressWarnings("unused") TNumeral node)
    {
        this.index = 41;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 42;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 43;
    }
}
