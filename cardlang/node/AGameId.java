/* This file was generated by SableCC (http://www.sablecc.org/). */

package cardlang.node;

import cardlang.analysis.*;

@SuppressWarnings("nls")
public final class AGameId extends PId
{
    private TKwgame _kwgame_;

    public AGameId()
    {
        // Constructor
    }

    public AGameId(
        @SuppressWarnings("hiding") TKwgame _kwgame_)
    {
        // Constructor
        setKwgame(_kwgame_);

    }

    @Override
    public Object clone()
    {
        return new AGameId(
            cloneNode(this._kwgame_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGameId(this);
    }

    public TKwgame getKwgame()
    {
        return this._kwgame_;
    }

    public void setKwgame(TKwgame node)
    {
        if(this._kwgame_ != null)
        {
            this._kwgame_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwgame_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._kwgame_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._kwgame_ == child)
        {
            this._kwgame_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._kwgame_ == oldChild)
        {
            setKwgame((TKwgame) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
