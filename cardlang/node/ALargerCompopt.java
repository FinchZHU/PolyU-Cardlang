/* This file was generated by SableCC (http://www.sablecc.org/). */

package cardlang.node;

import cardlang.analysis.*;

@SuppressWarnings("nls")
public final class ALargerCompopt extends PCompopt
{
    private TOptlarger _optlarger_;

    public ALargerCompopt()
    {
        // Constructor
    }

    public ALargerCompopt(
        @SuppressWarnings("hiding") TOptlarger _optlarger_)
    {
        // Constructor
        setOptlarger(_optlarger_);

    }

    @Override
    public Object clone()
    {
        return new ALargerCompopt(
            cloneNode(this._optlarger_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALargerCompopt(this);
    }

    public TOptlarger getOptlarger()
    {
        return this._optlarger_;
    }

    public void setOptlarger(TOptlarger node)
    {
        if(this._optlarger_ != null)
        {
            this._optlarger_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._optlarger_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._optlarger_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._optlarger_ == child)
        {
            this._optlarger_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._optlarger_ == oldChild)
        {
            setOptlarger((TOptlarger) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
