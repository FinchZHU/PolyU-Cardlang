/* This file was generated by SableCC (http://www.sablecc.org/). */

package cardlang.node;

import cardlang.analysis.*;

@SuppressWarnings("nls")
public final class ACompBoolobj extends PBoolobj
{
    private PNumexpr1 _numexpr1_;
    private PCompopt _compopt_;
    private PNumexpr2 _numexpr2_;

    public ACompBoolobj()
    {
        // Constructor
    }

    public ACompBoolobj(
        @SuppressWarnings("hiding") PNumexpr1 _numexpr1_,
        @SuppressWarnings("hiding") PCompopt _compopt_,
        @SuppressWarnings("hiding") PNumexpr2 _numexpr2_)
    {
        // Constructor
        setNumexpr1(_numexpr1_);

        setCompopt(_compopt_);

        setNumexpr2(_numexpr2_);

    }

    @Override
    public Object clone()
    {
        return new ACompBoolobj(
            cloneNode(this._numexpr1_),
            cloneNode(this._compopt_),
            cloneNode(this._numexpr2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompBoolobj(this);
    }

    public PNumexpr1 getNumexpr1()
    {
        return this._numexpr1_;
    }

    public void setNumexpr1(PNumexpr1 node)
    {
        if(this._numexpr1_ != null)
        {
            this._numexpr1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numexpr1_ = node;
    }

    public PCompopt getCompopt()
    {
        return this._compopt_;
    }

    public void setCompopt(PCompopt node)
    {
        if(this._compopt_ != null)
        {
            this._compopt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._compopt_ = node;
    }

    public PNumexpr2 getNumexpr2()
    {
        return this._numexpr2_;
    }

    public void setNumexpr2(PNumexpr2 node)
    {
        if(this._numexpr2_ != null)
        {
            this._numexpr2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numexpr2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._numexpr1_)
            + toString(this._compopt_)
            + toString(this._numexpr2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._numexpr1_ == child)
        {
            this._numexpr1_ = null;
            return;
        }

        if(this._compopt_ == child)
        {
            this._compopt_ = null;
            return;
        }

        if(this._numexpr2_ == child)
        {
            this._numexpr2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._numexpr1_ == oldChild)
        {
            setNumexpr1((PNumexpr1) newChild);
            return;
        }

        if(this._compopt_ == oldChild)
        {
            setCompopt((PCompopt) newChild);
            return;
        }

        if(this._numexpr2_ == oldChild)
        {
            setNumexpr2((PNumexpr2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
